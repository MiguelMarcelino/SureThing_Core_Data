syntax = "proto3";

package eu.surething_project.core;

option java_multiple_files = true;
option java_package = "eu.surething_project.core.locationclaim";
option java_outer_classname = "LocationClaimEntities";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "latlng.proto";
import "localized_text.proto";

// %TODO: Fix following imports
//import "google/type/latlng.proto";  
//import "google/type/localizedtext.proto";


// supported location schemas
message Location {
    oneof location {
        google.type.LatLng latLng = 1;
        PoI poi = 2;
        PoIProximity proximityToPoI = 3;
        OLC olc = 4;
    }
}

// Point of Interest (PoI) location
message PoI {
    string id = 1;
    string name = 2;
    google.type.LocalizedText localizedName = 3;
}

// Point of Interest proximity location
message PoIProximity {
    string poiId = 1;
    int64 distanceValue = 2;
    string distanceUnit = 3;
}


// Open Location Codes
// reference: https://github.com/google/open-location-code/blob/1796878d947c6e281e383e69bbd0821f82db9566/java/src/main/java/com/google/openlocationcode/OpenLocationCode.java#L106
message OLC {
    double southLatitude = 1;
    double westLongitude = 2;
    double northLatitude = 3;
    double eastLongitude = 4;
    int32 length = 5;
}

//enum IdentityType {
//    NUMERIC = 0;
//    FREE_TEXT = 1;
//    COMMON_NAME = 2; // X-509 name syntax
//}

// enum LocationType {
//     LAT_LONG = 0;
//     POI_NAME = 1;
//     PROXIMITY_TO_POI = 2;
//     OLC_CODE = 3;
// }

//enum TimeType {
//    TIMESTAMP = 0;
//    INTERVAL = 1; //start and end timestamps
//    RELATIVE_TO_EPOCH = 2;
//}


// supported time schemas
message Time {
    oneof time {
        google.protobuf.Timestamp timestamp = 1;
        TimeInterval interval = 2;
        EpochTime relativeToEpoch = 3;
    }
}

// Time interval
message TimeInterval {
    google.protobuf.Timestamp begin = 1;
    google.protobuf.Timestamp end = 2;
}

// Epoch time 
message EpochTime {
    string epochId = 1;
    int64 time = 2;
}


// definition of the location claim
message LocationClaim{

    // unique identifier for claim
    string claimId = 1;

	// prover unique id - pseudonyms -- identity scheme
	string proverId = 2;
	
	// prover's location -- location schemas
	Location location = 3;

    // timestamp of location claim -- time schemas
    Time time = 4;

    // type of the evidence
    string evidenceType = 5;

	// location evidence ??  - Screen signing , photo, ... -- evidence scheme
    // ? repeated?
	google.protobuf.Any claimEvidence = 6;

    // reference to another location claim
    string next = 7;
}

// signed location claim 
message SignedLocationClaim{
    // 
    LocationClaim claim = 1;
	// prover's signature
	Signature signature = 2;
}

// singature definition
message Signature {
    string CryptoAlgo = 1;
    int64 nonce = 2;
    bytes value = 3;
    google.protobuf.Any metaData = 4;
}


// Example: WiFi evidence : One possible definition 
message WiFiClaimEvidence {

    // unique id
    string id = 1;

    // Access point (AP) definition
    message AP{

        // AP identifier
        string ssid = 1;

        // measured RSSI 
        string rssi = 2;
    }

    // detected APs
    repeated AP aps = 2;

    // ...
}



